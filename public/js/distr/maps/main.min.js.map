{"version":3,"sources":["authenticate.js","authorisate.js","calendars.js","ical.js","performances.js","repertuar.js","request.js"],"names":["Authenticate","[object Object]","this","login","document","getElementById","pass1","pass2","authBtn","onclick","style","borderColor","authenticate","value","alert","authData","resp","request","statusText","window","location","href","Authorisate","loginInpt","passInpt","authorise","pass","Calendars","stageEvTime","stageEvMsg","tehEvTime","tehEvMsg","loadEvTime","loadEvMsg","stagePreloader","tehPreloader","loadPreloader","stageEvURL","tehEvURL","loadEvURL","onload","startUpdatingStageEvents","updateAllEvents","setInterval","type","display","url","status","console","error","json","evts","todayDate","todayEvents","key","evStart","Date","start","getFullYear","getMonth","getDate","push","i","length","getTime","evEnd","end","currTime","todayPlusHour","b","showPreloader","allStageEvents","getCalEvents","allTehEvents","allLoadEvents","noData","summary","now","todayStageEvents","getTodayEvents","currStageEvent","getCurrentEvent","nextStageEvent","getNextEvent","setEvent","hidePreloader","todayTehEvents","currTehEvent","nextTehEvent","todayLoadEvents","currLoadEvent","nextLoadEvent","evt","evType","textContent","undefined","getRusTime","time","timeStr","getHours","minutes","getMinutes","toString","iCal","intId","nowOnStage","nowOrNext","startPreloader","updateStageEvent","allEvents","currEvent","getCurrEvent","nextEvent","log","clearInterval","todayEvts","evStartDate","datePlusHour","str","Performance","e","edit","pointsData","leftSide","rightSide","totalPointsNum","addPerfBtn","preloader","searchInpt","backgroundModal","closeAddPerf","savePerfBtn","perfName","perfType","perfUrl","perfActs","perfPoints","perfNotes","addActBtn","searchResults","closeCardPerf","backgroundCard","addPointsBtn","addRightPointBtn","addLeftPointBtn","backgroundPoints","closeEditPointsBtn","userPointsBack","closeUserPoints","cardPerfName","cardPerfImg","cardPerfType","cardPerfActs","cardPerfPoints","cardPerfNotes","totalPointsSpan","save","addAct","addPoint","saveEditingPoints","scrollTo","oninput","clearDomElement","async","test","fillSearchResults","query","data","perfs","div","createElement","setAttribute","childNodes","appendChild","setTimeout","num","element","cb","firstChild","remove","acts","getActsEnding","s1","s2","points","p","countPointsNum","fillUserPointsTable","btn","height","offsetHeight","showUsualPointsTable","perf","name","imgUrl","src","origin","fillCardPerformanceActs","fillCardPerformancePoints","notes","innerHTML","openEdit","delBtn","confirm","_id","parentElement","results","fillPerformanceCard","showPerformanceCard","actLine","sp1","inpt","sp2","target","fillEditCardPointsDiv","fillPointsEditModal","span","span2","obj","prop","hasOwnProperty","JSON","stringify","trLeft","trRight","td1","td2","td3","leftTableFirstChild","rightTableFirstChild","leftPoint","isEmpty","input","sp","input2","stalls","split","input3","meters","input4","machine","delSpan","rightPoint","thenextContent","left","getElementsByClassName","right","t","o","first","last","lastChild","backgroundColor","insertBefore","childLen","children","checkActs","perfId","action","inputsValid","includes","reload","dt","point","tr","td","Repertuar","rollLine","day","todaySquare","offsetLeft","startAnimatingScroll","d","id","scrollLeft","method","fetch","headers","Content-Type","body"],"mappings":"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","file":"../main.min.js","sourcesContent":["\r\nclass Authenticate {\r\n\r\n  constructor() {\r\n    this.login = document.getElementById(\"login\");\r\n    this.pass1 = document.getElementById(\"pass1\");\r\n    this.pass2 = document.getElementById(\"pass2\");\r\n    this.authBtn = document.getElementById(\"authenticate-bt\");\r\n\r\n    this.login.onclick = () => {\r\n      this.login.style.borderColor = \"transparent\";\r\n    };\r\n\r\n    this.pass1.onclick = () => {\r\n      this.pass1.style.borderColor = \"transparent\";\r\n    };\r\n\r\n    this.pass2.onclick = () => {\r\n      this.pass2.style.borderColor = \"transparent\";\r\n    };\r\n\r\n    this.authBtn.onclick = () => {\r\n      this.authenticate();\r\n    }\r\n  }\r\n\r\n  async authenticate () {\r\n    if (!this.login.value) {\r\n      alert('Поле \"Логин\" пусто. Придумайте себе логин, чтобы продолжить.');\r\n      this.login.style.borderColor = \"#f26a6a\";\r\n      return;\r\n    }\r\n    else if (!this.pass1.value) {\r\n      alert('Поле \"Пароль\" пусто. Придумайте себе пароль, чтобы продолжить.');\r\n      this.pass1.style.borderColor = \"#f26a6a\";\r\n      return;\r\n    }\r\n    else if (!this.pass2.value) {\r\n        alert('Поле \"Пароль повторно\" пусто. Введите пароль повторно, чтобы продолжить.');\r\n        this.pass2.style.borderColor = \"#f26a6a\";\r\n        return;\r\n    }\r\n\r\n    if (this.pass1.value !== this.pass2.value) {\r\n      alert(\"Введённые Вами пароли не совпадают\");\r\n      return;\r\n    } \r\n\r\n    const authData = {\r\n      login: this.login.value,\r\n      pass1: this.pass1.value,\r\n      pass2: this.pass2.value,\r\n    }\r\n    \r\n    const resp = await request(\"/authenticate\", \"POST\", authData);\r\n    \r\n    if (resp.statusText == \"Inconsistent data\") {\r\n      alert(\"Отсутсвует логин или пароль\");\r\n      return;\r\n    } if (resp.statusText == \"Duplicate\") {\r\n      alert(\"Такой логин уже занят, придумайте другой\");\r\n      return;\r\n    } else if (resp.statusText == \"Passwords mismatch\")  {\r\n      alert(\"Пароли не совпадают\");\r\n      return;\r\n    } else if(resp.statusText == \"Authenticated\") {\r\n      alert(\"Аутентификация успешна, сейчас вы будете перенаправлены на страницу логина\");\r\n      window.location.href = \"/auth\";\r\n      return;\r\n    }\r\n    else {\r\n      alert(\"Ошибка аутентификации\");\r\n      return;\r\n    }\r\n    \r\n  };\r\n\r\n}","class Authorisate {\r\n\r\n  constructor() {\r\n    this.authBtn = document.getElementById(\"auth-bt\");\r\n    this.loginInpt = document.getElementById(\"login\");\r\n    this.passInpt = document.getElementById(\"pass\");\r\n\r\n    this.authBtn.onclick = () => {\r\n      this.authorise();\r\n    };\r\n  }\r\n\r\n\r\n  async authorise() {\r\n\r\n    if (!this.loginInpt.value || !this.passInpt.value) {\r\n      return alert(\"Отсутствует логин или пароль\");\r\n    }\r\n\r\n    const authData = {\r\n      login: this.loginInpt.value,\r\n      pass: this.passInpt.value\r\n    }\r\n\r\n    const resp = await request(\"/auth\", \"POST\", authData);\r\n    \r\n    if (resp.statusText == \"Check login and password\") {\r\n      alert(\"Неверный логин или пароль\");\r\n      return;\r\n    } else if (resp.statusText == \"Authorised\") {\r\n      alert(\"Авторизация успешна и будет действительна в течение 30 дней\");\r\n      window.location.href = \"/performances\";\r\n      return;\r\n    } else {\r\n      alert(\"Произошла ошибка во время авторизации\");\r\n      return;\r\n    }\r\n\r\n  }\r\n}","class Calendars {\r\n    constructor() {\r\n        this.stageEvTime = document.getElementById(\"stage-ev-time\");\r\n        this.stageEvMsg = document.getElementById(\"stage-ev-msg\");\r\n\r\n        this.tehEvTime = document.getElementById(\"teh-ev-time\");\r\n        this.tehEvMsg = document.getElementById(\"teh-ev-msg\");\r\n\r\n        this.loadEvTime = document.getElementById(\"load-ev-time\");\r\n        this.loadEvMsg = document.getElementById(\"load-ev-msg\");\r\n\r\n        this.stagePreloader = document.getElementById(\"stage-preloader\");\r\n        this.tehPreloader = document.getElementById(\"teh-preloader\");\r\n        this.loadPreloader = document.getElementById(\"load-preloader\");\r\n\r\n\r\n        this.stageEvURL = \"/api/ical/stage\";\r\n        this.tehEvURL = \"/api/ical/teh-job\";\r\n        this.loadEvURL = \"/api/ical/load\";\r\n\r\n        window.onload = () => {\r\n            this.startUpdatingStageEvents();\r\n        };\r\n    }\r\n\r\n    startUpdatingStageEvents() {\r\n        this.updateAllEvents();\r\n        setInterval(() => {\r\n            this.updateAllEvents();\r\n        }, 60000);\r\n    }\r\n\r\n    showPreloader(type) {\r\n        if (type == \"stage\") {\r\n            this.stagePreloader.style.display = \"block\";\r\n        } else if (type == \"tech\") {\r\n            this.tehPreloader.style.display = \"block\";\r\n        } else if (type == \"load\") {\r\n            this.loadPreloader.style.display = \"block\";\r\n        }\r\n    }\r\n\r\n    hidePreloader(type) {\r\n        if (type == \"stage\") {\r\n            this.stagePreloader.style.display = \"none\";\r\n        } else if (type == \"tech\") {\r\n            this.tehPreloader.style.display = \"none\";\r\n        } else if (type == \"load\") {\r\n            this.loadPreloader.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    // \"/api/ical/stage\"\r\n    async getCalEvents(url) {\r\n        const resp = await request(url, \"GET\");\r\n        if (resp.status !== 200) {\r\n            console.error(\"Error uploading calendar events\");\r\n        }\r\n        const data = await resp.json();\r\n        return data.evts;\r\n    }\r\n\r\n    getTodayEvents(evts, todayDate) {\r\n        const todayEvents = [];\r\n\r\n        for (let key in evts) {\r\n            const evStart = new Date(evts[key].start);\r\n            if (evStart.getFullYear() == todayDate.getFullYear() && evStart.getMonth() == todayDate.getMonth() && evStart.getDate() == todayDate.getDate()) {\r\n                todayEvents.push(evts[key]);\r\n            }\r\n        }\r\n        return todayEvents;\r\n    }\r\n\r\n    getCurrentEvent(evts, todayDate) {\r\n\r\n        for (let i = 0; i < evts.length; i++) {\r\n            const evStart = new Date(evts[i].start).getTime();\r\n            const evEnd = new Date(evts[i].end).getTime();\r\n            const currTime = todayDate.getTime();\r\n\r\n            if (evStart < currTime && evEnd > currTime) {\r\n                return evts[i];\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    getNextEvent(evts, todayDate) {\r\n        // Detect next event\r\n        let todayPlusHour = todayDate.getTime();\r\n        for (let b = 0; b < 5; b++) {\r\n            todayPlusHour += 1000 * 60 * 60;\r\n\r\n            for (let i = 0; i < evts.length; i++) {\r\n                const evStart = new Date(evts[i].start).getTime();\r\n                const evEnd = new Date(evts[i].end).getTime();\r\n\r\n                if (evStart < todayPlusHour && evEnd > todayPlusHour) {\r\n                    return evts[i];\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    async updateAllEvents() {\r\n        this.showPreloader(\"stage\");\r\n        const allStageEvents = await this.getCalEvents(this.stageEvURL);\r\n        this.showPreloader(\"tech\");\r\n        const allTehEvents = await this.getCalEvents(this.tehEvURL);\r\n        this.showPreloader(\"load\");\r\n        const allLoadEvents = await this.getCalEvents(this.loadEvURL);\r\n\r\n        const noData = { summary: \"Нет данных\" };\r\n        const todayDate = new Date(Date.now());\r\n\r\n        const todayStageEvents = this.getTodayEvents(allStageEvents, todayDate);\r\n        const currStageEvent = this.getCurrentEvent(todayStageEvents, todayDate);\r\n        if (!currStageEvent) {\r\n            const nextStageEvent = this.getNextEvent(todayStageEvents, todayDate);\r\n            // console.log(\"Next stage: \", nextStageEvent);\r\n            this.setEvent(nextStageEvent ? nextStageEvent : noData, todayDate)\r\n        }\r\n        this.setEvent(currStageEvent ? currStageEvent : noData, todayDate, \"stage\");\r\n        this.hidePreloader(\"stage\");\r\n\r\n        const todayTehEvents = this.getTodayEvents(allTehEvents, todayDate);\r\n        const currTehEvent = this.getCurrentEvent(todayTehEvents, todayDate);\r\n        if (!currTehEvent) {\r\n            const nextTehEvent = this.getNextEvent(todayTehEvents, todayDate);\r\n            // console.log(\"Next teh: \", nextTehEvent);\r\n            this.setEvent(nextTehEvent ? nextTehEvent : noData, todayDate)\r\n        }\r\n        this.setEvent(currTehEvent ? currTehEvent : noData, todayDate, \"tech\");\r\n        this.hidePreloader(\"tech\");\r\n\r\n        const todayLoadEvents = this.getTodayEvents(allLoadEvents, todayDate);\r\n        const currLoadEvent = this.getCurrentEvent(todayLoadEvents, todayDate);\r\n        if (!currLoadEvent) {\r\n            const nextLoadEvent = this.getNextEvent(todayLoadEvents, todayDate);\r\n            // console.log(\"Next load: \", nextLoadEvent);\r\n            this.setEvent(nextLoadEvent ? nextLoadEvent : noData, todayDate)\r\n        }\r\n        this.setEvent(currLoadEvent ? currLoadEvent : noData, todayDate, \"load\");\r\n        this.hidePreloader(\"load\");\r\n\r\n    }\r\n\r\n    setEvent(evt, todayDate, evType) {\r\n        if (evType == \"stage\") {\r\n            this.stageEvMsg.textContent = evt.summary;\r\n        } else if (evType == \"tech\") {\r\n            this.tehEvMsg.textContent = evt.summary;\r\n        } else if (evType == \"load\") {\r\n            this.loadEvMsg.textContent = evt.summary;\r\n        }\r\n\r\n        if (evt.start != undefined && evt.end != undefined) {\r\n            if (new Date(evt.start).getTime() > todayDate.getTime()) {\r\n                if (evType == \"stage\") {\r\n                    this.stageEvTime.textContent = \"Далее: \" + this.getRusTime(evt.start) + \" - \" + this.getRusTime(evt.end)\r\n                } else if (evType == \"tech\") {\r\n                    this.tehEvTime.textContent = \"Далее: \" + this.getRusTime(evStart) + \" - \" + this.getRusTime(evEnd);\r\n                } else if (evType == \"load\") {\r\n                    this.loadEvTime.textContent = \"Далее: \" + this.getRusTime(evStart) + \" - \" + this.getRusTime(evEnd);;\r\n                }\r\n            } else {\r\n                if (evType == \"stage\") {\r\n                    this.stageEvTime.textContent = \"Сейчас: \" + this.getRusTime(evt.start) + \" - \" + this.getRusTime(evt.end);\r\n                } else if (evType == \"tech\") {\r\n                    this.tehEvTime.textContent = \"Сейчас: \" + this.getRusTime(evStart) + \" - \" + this.getRusTime(evEnd);\r\n                } else if (evType == \"load\") {\r\n                    this.loadEvTime.textContent = \"Сейчас: \" + this.getRusTime(evStart) + \" - \" + this.getRusTime(evEnd);\r\n                }\r\n            }\r\n\r\n        } else {\r\n            if (evType == \"stage\") {\r\n                this.stageEvTime.textContent = \"Сейчас: \";\r\n            } else if (evType == \"tech\") {\r\n                this.tehEvTime.textContent = \"Сейчас: \";\r\n            } else if (evType == \"load\") {\r\n                this.loadEvTime.textContent = \"Сейчас: \";\r\n            }\r\n        }\r\n    }\r\n\r\n    getRusTime(time) {\r\n        time = new Date(time);\r\n        let timeStr = time.getHours();\r\n        let minutes = time.getMinutes();\r\n        if (minutes.toString().length == 1) {\r\n            minutes = minutes.toString() + \"0\";\r\n        }\r\n        timeStr += \":\" + minutes;\r\n        return timeStr;\r\n    }\r\n}","class iCal {\r\n    constructor() {\r\n\r\n        this.intId = null;\r\n        this.nowOnStage = document.getElementById(\"now-on-stage\");\r\n        this.nowOrNext = document.getElementById(\"now-or-next\");\r\n\r\n        window.onload = () => {\r\n            this.startPreloader();\r\n            this.startUpdatingStageEvents();\r\n        }\r\n    }\r\n\r\n    startUpdatingStageEvents() {\r\n        this.updateStageEvent();\r\n        setInterval(() => {\r\n            this.updateStageEvent();\r\n        }, 120000);\r\n    }\r\n\r\n    async updateStageEvent() {\r\n        const allEvents = await this.getCalEvents();\r\n        const todayDate = new Date(Date.now());\r\n        const todayEvents = this.getTodayEvents(allEvents, todayDate);\r\n        const currEvent = this.getCurrEvent(todayEvents, todayDate);\r\n        const noData = { summary: \"Нет данных\" };\r\n\r\n        if (!currEvent) {\r\n            const nextEvent = this.getNextEvent(todayEvents, todayDate);\r\n            console.log(\"Next: \", nextEvent);\r\n            this.setEvent(nextEvent ? nextEvent : noData, todayDate)\r\n        }\r\n        this.setEvent(currEvent ? currEvent : noData, todayDate);\r\n    }\r\n\r\n    async getCalEvents() {\r\n        const resp = await request(\"/api/ical/stage\", \"GET\");\r\n        if (resp.status !== 200) {\r\n            clearInterval(this.intId);\r\n            this.nowOnStage.textContent = \"? error ?\";\r\n        }\r\n        const data = await resp.json();\r\n        return data.evts;\r\n    }\r\n\r\n    getTodayEvents(evts, todayDate) {\r\n        const todayEvts = [];\r\n\r\n        for (let key in evts) {\r\n            const evStartDate = new Date(evts[key].start);\r\n            if (evStartDate.getFullYear() == todayDate.getFullYear() && evStartDate.getMonth() == todayDate.getMonth() && evStartDate.getDate() == todayDate.getDate()) {\r\n                todayEvts.push(evts[key]);\r\n            }\r\n        }\r\n\r\n        return todayEvts;\r\n    }\r\n\r\n    getCurrEvent(todayEvents, todayDate) {\r\n        for (let i = 0; i < todayEvents.length; i++) {\r\n            const evStart = new Date(todayEvents[i].start).getTime();\r\n            const evEnd = new Date(todayEvents[i].end).getTime();\r\n            const currTime = todayDate.getTime();\r\n\r\n            if (evStart < currTime && evEnd > currTime) {\r\n                return todayEvents[i];\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getNextEvent(todayEvents, todayDate) {\r\n        let datePlusHour = todayDate.getTime();\r\n\r\n        for (let b = 0; b < 5; b++) {\r\n            datePlusHour += 1000 * 60 * 60;\r\n            for (let i = 0; i < todayEvents.length; i++) {\r\n                const evStart = new Date(todayEvents[i].start).getTime();\r\n                const evEnd = new Date(todayEvents[i].end).getTime();\r\n\r\n                console.log(evStart < datePlusHour);\r\n\r\n                if (evStart < datePlusHour && evEnd > datePlusHour) {\r\n                    return todayEvents[i];\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    getRusTime(time) {\r\n        time = new Date(time);\r\n        return `${time.getHours()}:${time.getMinutes().toString().length == 1 ? time.getMinutes().toString() + \"0\" : time.getMinutes()}`;\r\n    }\r\n\r\n    setEvent(evt, todayDate) {\r\n        \r\n        clearInterval(this.intId);\r\n\r\n        if (evt && (evt.summary != \"Нет данных\")) {\r\n            if (new Date(evt.start).getTime() > todayDate.getTime()) {\r\n                this.nowOrNext.textContent = \"Далее на сцене:\";\r\n            } else {\r\n                this.nowOrNext.textContent = \"Сейчас на сцене:\";\r\n            }\r\n            const time = \"C \" + this.getRusTime(evt.start) + \" до \" + this.getRusTime(evt.end);\r\n            this.nowOnStage.textContent = time + \" - \" + evt.summary;\r\n\r\n        } else {\r\n            this.nowOnStage.textContent = evt.summary;\r\n        }\r\n    }\r\n\r\n    startPreloader() {\r\n        let str = \".\";\r\n        this.intId = setInterval(() => {\r\n            str += \".\";\r\n            this.nowOnStage.textContent = str;\r\n            if (str.length > 2) str = \"\";\r\n        }, 400);\r\n    }\r\n}","class Performance {\r\n  constructor(e = \"\", edit = \"false\") {\r\n\r\n    this.edit = edit;\r\n    this.pointsData = { leftSide: {}, rightSide: {} };\r\n\r\n    this.totalPointsNum = 0;\r\n    this.addPerfBtn = document.getElementById(\"add-performance-btn\");\r\n    this.preloader = document.getElementById(\"preloader\");\r\n    this.searchInpt = document.getElementById(\"search-perfs\");\r\n    this.backgroundModal = document.getElementById(\"background-modal\");\r\n    this.closeAddPerf = document.getElementById(\"close-adding-perf\");\r\n    this.savePerfBtn = document.getElementById(\"save-perf-btn\");\r\n    this.perfName = document.getElementById(\"perf-name\");\r\n    this.perfType = document.getElementById(\"perf-type\");\r\n    this.perfUrl = document.getElementById(\"perf-pic-url\");\r\n    this.perfActs = document.getElementById(\"perf-acts\");\r\n    this.perfPoints = document.getElementById(\"perf-points\");\r\n    this.perfNotes = document.getElementById(\"perf-notes\");\r\n    this.addActBtn = document.getElementById(\"add-act\");\r\n    this.searchResults = document.getElementById(\"search-results\");\r\n    this.closeCardPerf = document.getElementById(\"close-card-perf\");\r\n    this.backgroundCard = document.getElementById(\"card-back\");\r\n    this.addPointsBtn = document.getElementById(\"add-points\");\r\n    this.addRightPointBtn = document.getElementById(\"add-right-pt-btn\");\r\n    this.addLeftPointBtn = document.getElementById(\"add-left-pt-btn\");\r\n    this.backgroundPoints = document.getElementById(\"points-back\");\r\n    this.closeEditPointsBtn = document.getElementById(\"close-points-perf\");\r\n    this.userPointsBack = document.getElementById(\"user-points-back\");\r\n    this.closeUserPoints = document.getElementById(\"close-user-points\");\r\n    this.cardPerfName = document.getElementById(\"card-perf-name\");\r\n    this.cardPerfImg = document.getElementById(\"card-perf-img\");\r\n    this.cardPerfType = document.getElementById(\"card-perf-type\");\r\n    this.cardPerfActs = document.getElementById(\"card-perf-acts\");\r\n    this.cardPerfPoints = document.getElementById(\"card-perf-points\");\r\n    this.cardPerfNotes = document.getElementById(\"card-perf-notes\");\r\n    this.totalPointsSpan = document.getElementById(\"total-points-num\");\r\n\r\n    if (this.edit === \"true\") {\r\n      this.addPerfBtn.onclick = () => {\r\n        this.backgroundModal.style.display = \"block\";\r\n      };\r\n\r\n      this.closeAddPerf.onclick = () => {\r\n        this.backgroundModal.style.display = \"none\";\r\n      };\r\n\r\n      this.savePerfBtn.onclick = () => {\r\n        this.save(!1, \"create\");\r\n      };\r\n\r\n      this.perfName.onclick = () => {\r\n        this.perfName.style.borderColor = \"initial\";\r\n      };\r\n\r\n      this.perfType.onclick = () => {\r\n        this.perfType.style.borderColor = \"initial\";\r\n      };\r\n\r\n      this.addActBtn.onclick = () => {\r\n        this.addAct();\r\n      };\r\n\r\n      this.addRightPointBtn.onclick = () => {\r\n        this.addPoint(\"right\");\r\n      };\r\n\r\n      this.addLeftPointBtn.onclick = () => {\r\n        this.addPoint(\"left\");\r\n      };\r\n    }\r\n\r\n    this.closeEditPointsBtn.onclick = () => {\r\n      this.saveEditingPoints();\r\n    };\r\n\r\n    this.addPointsBtn.onclick = () => {\r\n      this.backgroundPoints.style.display = \"block\";\r\n      window.scrollTo(0, 0);\r\n    };\r\n\r\n    this.closeCardPerf.onclick = () => {\r\n      this.savePerfBtn.onclick = () => {\r\n        this.save(!1, \"create\");\r\n      };\r\n      this.backgroundCard.style.display = \"none\";\r\n    };\r\n\r\n    this.closeUserPoints.onclick = () => {\r\n      this.userPointsBack.style.display = \"none\";\r\n    };\r\n\r\n    this.searchInpt.oninput = () => {\r\n      if (this.searchInpt.value && this.searchInpt.value != \"\") {\r\n        this.clearDomElement(this.searchResults, async () => {\r\n\r\n          if (/^\\s*$/.test(this.searchInpt.value)) {\r\n            this.fillSearchResults([]);\r\n          }\r\n          else {\r\n\r\n            const query = {\r\n              query: this.searchInpt.value\r\n            }\r\n\r\n            this.preloader.style.display = \"block\";\r\n\r\n            const resp = await request(\"/perf-search\", \"POST\", query);\r\n            if (resp.statusText == \"OK\") {\r\n              const data = await resp.json();\r\n              this.fillSearchResults(data.perfs);\r\n              this.preloader.style.display = \"none\";\r\n            } else {\r\n              if (resp === \"error\")\r\n                return this.preloader.style.display = \"none\";\r\n              if (resp == \"econn\") {\r\n                this.preloader.style.display = \"none\";\r\n                const div = document.createElement(\"div\");\r\n                div.setAttribute(\"class\", \"perf-name-found nothing-found\");\r\n                div.textContent = \"Проверьте интернет соединение\";\r\n                if (!this.searchResults.childNodes[0]) {\r\n                  this.searchResults.appendChild(div);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n      else {\r\n        setTimeout(() => {\r\n          this.clearDomElement(this.searchResults, () => { });\r\n        }, 100);\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n\r\n  getActsEnding = num => {\r\n    let actsNum = 1 == num ? num + \" акт\" : num > 1 && num < 5 ? num + \" акта\" : num + \"актов\";\r\n    return actsNum;\r\n  };\r\n\r\n  showPerformanceCard = () => {\r\n    this.backgroundCard.style.display = \"block\";\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  showUsualPointsTable = () => {\r\n    this.userPointsBack.style.display = \"block\";\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  clearDomElement = (element, cb) => {\r\n    while (element.firstChild) {\r\n      element.firstChild.remove();\r\n    }\r\n    return cb();\r\n  };\r\n\r\n  fillCardPerformanceActs = (perfType, acts) => {\r\n    if (perfType === \"ballet\") {\r\n      this.cardPerfType.textContent = `Балет, ${this.getActsEnding(acts.length)}`;\r\n    } else if (perfType === \"opera\") {\r\n      this.cardPerfType.textContent = `Опера, ${this.getActsEnding(acts.length)}`;\r\n    }\r\n\r\n    this.clearDomElement(this.cardPerfActs, () => {\r\n      for (let i = 0; i < acts.length; i++) {\r\n        let div = document.createElement(\"div\"),\r\n          s1 = document.createElement(\"span\"),\r\n          s2 = document.createElement(\"span\");\r\n\r\n        div.setAttribute(\"class\", \"act-line\");\r\n        s1.textContent = `${i + 1} Акт:`;\r\n        s2.textContent = `${acts[i]}`;\r\n        div.appendChild(s1);\r\n        div.appendChild(s2);\r\n        this.cardPerfActs.appendChild(div);\r\n      }\r\n    });\r\n  };\r\n\r\n  fillCardPerformancePoints = (points) => {\r\n\r\n    if (points) {\r\n\r\n      if (this.cardPerfPoints.childNodes.length == 2) {\r\n        this.cardPerfPoints.childNodes[1].remove()\r\n      }\r\n      else if (this.cardPerfPoints.childNodes.length == 3) {\r\n        this.cardPerfPoints.childNodes[1].remove();\r\n        this.cardPerfPoints.childNodes[1].remove()\r\n      }\r\n\r\n      const p = document.createElement(\"p\");\r\n      p.setAttribute(\"class\", \"total-points-usr\");\r\n      p.textContent = `Всего: ${this.countPointsNum(points)} шт.`;\r\n      this.cardPerfPoints.appendChild(p),\r\n        this.fillUserPointsTable(points);\r\n\r\n      const btn = document.createElement(\"button\");\r\n      btn.setAttribute(\"class\", \"showPoints-btn\");\r\n      btn.textContent = \"Просмотр\";\r\n      btn.onclick = () => {\r\n        this.userPointsBack.style.height = this.backgroundCard.offsetHeight + \"px\";\r\n        this.showUsualPointsTable();\r\n      }\r\n      this.cardPerfPoints.appendChild(btn);\r\n\r\n    } else if (this.cardPerfPoints.childNodes.length == 3) {\r\n      this.cardPerfPoints.childNodes[1].remove();\r\n      this.cardPerfPoints.childNodes[1].remove();\r\n      const i = document.createElement(\"i\");\r\n      i.textContent = \"– Отсутствуют\";\r\n      this.cardPerfPoints.appendChild(i);\r\n    }\r\n  };\r\n\r\n  fillPerformanceCard = (perf) => {\r\n\r\n    this.cardPerfName.textContent = perf.name;\r\n\r\n    if (perf.imgUrl) {\r\n      this.cardPerfImg.src = window.location.origin + \"/static/imgs/performance-imgs/\" + perf.imgUrl;\r\n      this.cardPerfImg.style.display = \"inline-block\";\r\n    } else {\r\n      this.cardPerfImg.src = window.location.origin + \"/static/imgs/performance-imgs/no-photo.png\";\r\n      this.cardPerfImg.style.display = \"inline-block\";\r\n    }\r\n\r\n    this.fillCardPerformanceActs(perf.type, perf.acts);\r\n    this.fillCardPerformancePoints(perf.points);\r\n\r\n    if (perf.notes != \"\") {\r\n      this.cardPerfNotes.innerHTML = perf.notes;\r\n    } else {\r\n      this.cardPerfNotes.textContent = \"– Отсутствуют\";\r\n    }\r\n\r\n    if (this.edit === \"true\") {\r\n      let btn = document.createElement(\"button\");\r\n      btn.setAttribute(\"class\", \"edit-btn\");\r\n      btn.textContent = \"Редактировать\";\r\n      btn.onclick = () => {\r\n        this.openEdit(perf);\r\n      };\r\n\r\n      let delBtn = document.createElement(\"button\");\r\n      delBtn.setAttribute(\"class\", \"rm-perf-btn\");\r\n      delBtn.textContent = \"Удалить\";\r\n      delBtn.onclick = () => {\r\n        if (confirm(`Вы действительно хотите удалить спектакль \"${perf.name}\" из базы?`)) {\r\n          this.save(perf._id, \"remove\");\r\n        }\r\n      };\r\n\r\n      if (this.cardPerfName.parentElement.childNodes.length == 4) {\r\n        this.cardPerfName.parentElement.appendChild(btn);\r\n        this.cardPerfName.parentElement.appendChild(delBtn)\r\n      } else {\r\n        this.cardPerfName.parentElement.childNodes[4].remove();\r\n        this.cardPerfName.parentElement.childNodes[4].remove();\r\n        this.cardPerfName.parentElement.appendChild(btn);\r\n        this.cardPerfName.parentElement.appendChild(delBtn);\r\n      }\r\n    }\r\n\r\n    this.savePerfBtn.onclick = () => {\r\n      this.save(perf._id, \"update\");\r\n    };\r\n  };\r\n\r\n  fillSearchResults = results => {\r\n    if (results.length == 0) {\r\n      const div = document.createElement(\"div\");\r\n      div.setAttribute(\"class\", \"perf-name-found nothing-found\");\r\n      div.textContent = \"Ничего не найдено\";\r\n      if (!this.searchResults.childNodes[0]) {\r\n        this.searchResults.appendChild(div);\r\n      }\r\n    } else\r\n      for (let i = 0; i < results.length; i++) {\r\n        let div = document.createElement(\"div\");\r\n        div.setAttribute(\"class\", \"perf-name-found\");\r\n        div.textContent = results[i].name;\r\n\r\n        div.onclick = () => {\r\n          this.fillPerformanceCard(results[i]);\r\n          this.showPerformanceCard();\r\n        };\r\n        for (let b = 0; b < this.searchResults.childNodes.length; b++) {\r\n          if (this.searchResults.childNodes[b].textContent == div.textContent) {\r\n            return;\r\n          }\r\n        }\r\n        this.searchResults.appendChild(div);\r\n\r\n      }\r\n  };\r\n\r\n\r\n  openEdit = perf => {\r\n    // e = perf;\r\n    this.pointsData = perf.points;\r\n    this.backgroundCard.style.display = \"none\";\r\n    this.backgroundModal.style.display = \"block\";\r\n    this.perfName.value = perf.name;\r\n    this.perfType.value = perf.type;\r\n    this.perfUrl.value = perf.imgUrl;\r\n\r\n    if (perf.acts.length > 0) {\r\n      // let t, o, i, s, l;\r\n      let actLine, sp1, inpt, sp2, btn;\r\n\r\n      this.perfActs.innerHTML = \"\";\r\n      for (let i = 0; i < perf.acts.length; i++) {\r\n        actLine = document.createElement(\"div\");\r\n        actLine.setAttribute(\"class\", \"act-line\");\r\n        sp1 = document.createElement(\"span\");\r\n        sp1.setAttribute(\"class\", \"perf-act\");\r\n        sp1.textContent = i + 1 + \":\";\r\n        actLine.appendChild(sp1);\r\n        inpt = document.createElement(\"input\");\r\n        inpt.setAttribute(\"class\", \"act-time\");\r\n        inpt.setAttribute(\"type\", \"text\");\r\n        inpt.setAttribute(\"placeholder\", \"1ч 15мин\");\r\n        inpt.value = perf.acts[i];\r\n        actLine.appendChild(inpt);\r\n\r\n        if (i == 0) {\r\n          btn = document.createElement(\"button\");\r\n          btn.setAttribute(\"class\", \"add-mini-btn\");\r\n          btn.textContent = \"+\";\r\n          btn.onclick = () => {\r\n            this.addAct();\r\n          }\r\n          actLine.appendChild(btn)\r\n        } else {\r\n          sp2 = document.createElement(\"span\");\r\n          sp2.setAttribute(\"class\", \"del-act-btn\");\r\n          sp2.textContent = \"X\";\r\n          sp2.onclick = e => {\r\n            e.target.parentElement.remove();\r\n          };\r\n          actLine.appendChild(sp2);\r\n          // em = document.createElement(\"button\");\r\n          // sp1.setAttribute(\"class\", \"perf-act\");\r\n        }\r\n        this.perfActs.appendChild(actLine);\r\n      }\r\n\r\n      this.fillEditCardPointsDiv(perf.points);\r\n      this.fillPointsEditModal(perf.points);\r\n      this.perfNotes.value = perf.notes;\r\n      this.savePerfBtn.textContent = \"Сохранить изменения\";\r\n      this.savePerfBtn.onclick = () => {\r\n        this.save(perf._id, \"update\");\r\n      };\r\n    }\r\n  };\r\n\r\n  fillEditCardPointsDiv = points => {\r\n    // e = points\r\n    if (points) {\r\n      this.perfPoints.childNodes[0].remove();\r\n      this.perfPoints.childNodes[0].remove();\r\n      let span = document.createElement(\"span\"); // t\r\n      span.setAttribute(\"class\", \"points-number\");\r\n      span.textContent = this.countPointsNum(points) + \" шт.\";\r\n      let span2 = document.createElement(\"span\"); // o\r\n      span2.setAttribute(\"class\", \"showPoints-btn\");\r\n      span2.textContent = \"Редактор\";\r\n      span2.onclick = () => {\r\n        this.fillPointsEditModal(points);\r\n        this.backgroundPoints.style.height = this.backgroundModal.offsetHeight + \"px\";\r\n        this.backgroundPoints.style.display = \"block\";\r\n        window.scrollTo(0, 0);\r\n      };\r\n      this.perfPoints.appendChild(span),\r\n        this.perfPoints.appendChild(span2);\r\n    }\r\n  };\r\n\r\n  isEmpty = obj => {\r\n    for (var prop in obj)\r\n      if (obj.hasOwnProperty(prop)) return false;\r\n    return JSON.stringify(obj) === JSON.stringify({});\r\n  };\r\n\r\n  fillPointsEditModal = (points = {}) => {\r\n    // e = points\r\n\r\n    // let t, o, i, s, l, a = document.getElementById(\"left-table\").firstChild,\r\n    // d = document.getElementById(\"right-table\").firstChild;\r\n    let trLeft, trRight, td1, td2, td3;\r\n\r\n    const leftTableFirstChild = document.getElementById(\"left-table\").firstChild;\r\n    const rightTableFirstChild = document.getElementById(\"right-table\").firstChild;\r\n\r\n    while (leftTableFirstChild.childNodes.length > 1) {\r\n      leftTableFirstChild.childNodes[1].remove();\r\n    }\r\n    while (rightTableFirstChild.childNodes.length > 1) {\r\n      rightTableFirstChild.childNodes[1].remove();\r\n    }\r\n\r\n    this.totalPointsNum = this.countPointsNum(points);\r\n\r\n    document.getElementById(\"total-points-num\").textContent = this.countPointsNum(points) + \" шт.\";\r\n\r\n    for (const leftPoint in points.leftSide) {\r\n      if (this.isEmpty(points.leftSide[leftPoint])) continue;\r\n      // let d, r, c\r\n      let input, sp, input2;\r\n      trLeft = document.createElement(\"tr\");\r\n      trLeft.setAttribute(\"class\", \"left-point-rope\");\r\n      trLeft.appendChild(document.createElement(\"td\"));\r\n      td1 = document.createElement(\"td\");\r\n      td2 = document.createElement(\"td\");\r\n      td3 = document.createElement(\"td\");\r\n      input = document.createElement(\"input\");\r\n      input.setAttribute(\"type\", \"number\");\r\n      input.setAttribute(\"class\", \"lines\");\r\n      input.value = points.leftSide[leftPoint].stalls.split(\"/\")[0];\r\n      sp = document.createElement(\"span\");\r\n      sp.textContent = \"/\";\r\n      input2 = document.createElement(\"input\");\r\n      input2.setAttribute(\"type\", \"number\");\r\n      input2.setAttribute(\"class\", \"lines\");\r\n      input2.value = points.leftSide[leftPoint].stalls.split(\"/\")[1];\r\n      td1.appendChild(input);\r\n      td1.appendChild(sp);\r\n      td1.appendChild(input2);\r\n      let input3 = document.createElement(\"input\");\r\n      input3.setAttribute(\"type\", \"number\");\r\n      input3.setAttribute(\"class\", \"meters\");\r\n      input3.value = points.leftSide[leftPoint].meters;\r\n      td2.appendChild(input3);\r\n      let input4 = document.createElement(\"input\");\r\n      input4.setAttribute(\"type\", \"number\");\r\n      input4.setAttribute(\"class\", \"machine\");\r\n      input4.value = points.leftSide[leftPoint].machine;\r\n      td3.appendChild(input4);\r\n      let delSpan = document.createElement(\"span\");\r\n      delSpan.setAttribute(\"class\", \"del-point-rope\");\r\n      delSpan.textContent = \"X\";\r\n      delSpan.onclick = e => {\r\n        if (confirm(\"Удалить эту точку подвеса?\")) {\r\n          e.target.parentElement.parentElement.remove();\r\n          this.totalPointsNum--;\r\n          this.totalPointsSpan.textContent = this.totalPointsNum + \" шт.\";\r\n        }\r\n      };\r\n\r\n      td3.appendChild(delSpan);\r\n      trLeft.appendChild(td1);\r\n      trLeft.appendChild(td2);\r\n      trLeft.appendChild(td3);\r\n      leftTableFirstChild.appendChild(trLeft);\r\n    }\r\n\r\n    for (const rightPoint in points.rightSide) {\r\n      \r\n      if (this.isEmpty(points.rightSide[rightPoint])) continue;\r\n      // let a, r, c;\r\n      let input, sp, input2;\r\n      trRight = document.createElement(\"tr\");\r\n      trRight.setAttribute(\"class\", \"right-point-rope\");\r\n      trRight.appendChild(document.createElement(\"td\"));\r\n      td1 = document.createElement(\"td\");\r\n      td2 = document.createElement(\"td\");\r\n      td3 = document.createElement(\"td\");\r\n      input = document.createElement(\"input\");\r\n      input.setAttribute(\"type\", \"number\");\r\n      input.setAttribute(\"class\", \"lines\");\r\n      input.value = points.rightSide[rightPoint].stalls.split(\"/\")[0];\r\n      sp = document.createElement(\"span\");\r\n      sp.thenextContent = \"/\";\r\n      input2 = document.createElement(\"input\");\r\n      input2.setAttribute(\"type\", \"number\");\r\n      input2.setAttribute(\"class\", \"lines\");\r\n      input2.value = points.rightSide[rightPoint].stalls.split(\"/\")[1];\r\n      td1.appendChild(input);\r\n      td1.appendChild(sp);\r\n      td1.appendChild(input2);\r\n\r\n      let input3 = document.createElement(\"input\");\r\n      input3.setAttribute(\"type\", \"number\");\r\n      input3.setAttribute(\"class\", \"meters\");\r\n      input3.value = points.rightSide[rightPoint].meters;\r\n      td2.appendChild(input3);\r\n\r\n      let input4 = document.createElement(\"input\");\r\n      input4.setAttribute(\"type\", \"number\");\r\n      input4.setAttribute(\"class\", \"machine\");\r\n      input4.value = points.rightSide[rightPoint].machine;\r\n      td3.appendChild(input4);\r\n\r\n      let delSpan = document.createElement(\"span\");\r\n      delSpan.setAttribute(\"class\", \"del-point-rope\");\r\n      delSpan.textContent = \"X\";\r\n      delSpan.onclick = e => {\r\n        if (confirm(\"Удалить эту точку подвеса?\")) {\r\n          e.target.parentElement.parentElement.remove();\r\n          this.totalPointsNum--;\r\n          this.totalPointsSpan.textContent = this.totalPointsNum + \" шт.\";\r\n        }\r\n      }\r\n      td3.appendChild(delSpan);\r\n      trRight.appendChild(td1);\r\n      trRight.appendChild(td2);\r\n      trRight.appendChild(td3);\r\n      rightTableFirstChild.appendChild(trRight);\r\n    }\r\n  };\r\n\r\n  countPointsNum = points => {\r\n    let num = 0;\r\n    if (!points) return 0;\r\n    for (let key in points.leftSide) {\r\n      if (!this.isEmpty(points.leftSide[key])) {\r\n        num++;\r\n      }\r\n    }\r\n    for (let key in points.rightSide) {\r\n      if (!this.isEmpty(points.rightSide[key])) {\r\n        num++;\r\n      }\r\n    }\r\n    return num;\r\n  };\r\n\r\n  fillUserPointsTable = points => {\r\n    // e = points\r\n    // let t-tr, o, i-td1, s-td2, l-td3,\r\n    let trLeft, trRight, td1, td2, td3;\r\n    // a = document.getElementById(\"left-usr-table\").firstChild,\r\n    // d = document.getElementById(\"right-usr-table\").firstChild;\r\n\r\n    let leftTableFirstChild = document.getElementById(\"left-usr-table\").firstChild;\r\n    let rightTableFirstChild = document.getElementById(\"right-usr-table\").firstChild;\r\n\r\n    while (leftTableFirstChild.childNodes.length > 1) leftTableFirstChild.childNodes[1].remove();\r\n    while (rightTableFirstChild.childNodes.length > 1) rightTableFirstChild.childNodes[1].remove();\r\n\r\n    document.getElementById(\"total-user-points\").textContent = this.countPointsNum(points) + \" шт.\";\r\n\r\n    // n - point\r\n    for (const leftPoint in points.leftSide) {\r\n      trLeft = document.createElement(\"tr\");\r\n      trLeft.appendChild(document.createElement(\"td\"));\r\n      td1 = document.createElement(\"td\");\r\n      td2 = document.createElement(\"td\");\r\n      td3 = document.createElement(\"td\");\r\n      td1.textContent = points.leftSide[leftPoint].stalls;\r\n      trLeft.appendChild(td1);\r\n      td2.textContent = points.leftSide[leftPoint].meters;\r\n      trLeft.appendChild(td2);\r\n      td3.textContent = points.leftSide[leftPoint].machine;\r\n      trLeft.appendChild(td3);\r\n      leftTableFirstChild.appendChild(trLeft);\r\n    }\r\n    for (const rightPoint in points.rightSide) {\r\n      trRight = document.createElement(\"tr\");\r\n      trRight.appendChild(document.createElement(\"td\"));\r\n      td1 = document.createElement(\"td\");\r\n      td2 = document.createElement(\"td\");\r\n      td3 = document.createElement(\"td\");\r\n      td1.textContent = points.rightSide[rightPoint].stalls;\r\n      trRight.appendChild(td1);\r\n      td2.textContent = points.rightSide[rightPoint].meters;\r\n      trRight.appendChild(td2);\r\n      td3.textContent = points.rightSide[rightPoint].machine;\r\n      trRight.appendChild(td3);\r\n      rightTableFirstChild.appendChild(trRight);\r\n    }\r\n  };\r\n\r\n  saveEditingPoints = () => {\r\n    const left = document.getElementsByClassName(\"left-point-rope\"); // e\r\n    const right = document.getElementsByClassName(\"right-point-rope\"); // t\r\n\r\n    this.pointsData = { leftSide: {}, rightSide: {} };\r\n\r\n    if (left.length != 0 || right.length != 0) {\r\n      for (let t = 0; t < left.length; t++) {\r\n        this.pointsData.leftSide[\"point\" + (t + 1)] = {};\r\n        for (let o = 1; o < left[t].childNodes.length; o++)\r\n          if (o == 1) {\r\n            let first = left[t].childNodes[o].firstChild, // i\r\n              last = left[t].childNodes[o].lastChild; // s\r\n            if (!first.value) {\r\n              ;\r\n              first.parentElement.style.backgroundColor = \"red\";\r\n              first.onclick = () => {\r\n                first.parentElement.style.backgroundColor = \"initial\";\r\n              }\r\n              alert(\"Пустые поля недопустимы, заполните либо удалите пустые точки подвеса\");\r\n              return;\r\n            }\r\n            if (!last.value) {\r\n              last.parentElement.style.backgroundColor = \"red\";\r\n              last.onclick = () => {\r\n                last.parentElement.style.backgroundColor = \"initial\";\r\n              }\r\n              alert(\"Пустые поля недопустимы, заполните либо удалите пустые точки подвеса\");\r\n              return;\r\n            }\r\n            this.pointsData.leftSide[\"point\" + (t + 1)].stalls = first.value + \"/\" + last.value;\r\n          } else if (o == 2) {\r\n            if (!left[t].childNodes[o].firstChild.value) {\r\n              left[t].childNodes[o].firstChild.parentElement.style.backgroundColor = \"red\";\r\n              left[t].childNodes[o].firstChild.onclick = () => {\r\n                left[t].childNodes[o].firstChild.parentElement.style.backgroundColor = \"initial\";\r\n              }\r\n              alert(\"Пустые поля недопустимы, заполните либо удалите пустые точки подвеса\");\r\n              return;\r\n            }\r\n            this.pointsData.leftSide[\"point\" + (t + 1)].meters = left[t].childNodes[o].firstChild.value;\r\n          } else if (o == 3) {\r\n            this.pointsData.leftSide[\"point\" + (t + 1)].machine = left[t].childNodes[o].firstChild.value;\r\n          }\r\n      }\r\n\r\n      for (let e = 0; e < right.length; e++) {\r\n        this.pointsData.rightSide[\"point\" + (e + 1)] = {};\r\n\r\n        for (let o = 1; o < right[e].childNodes.length; o++) {\r\n          if (o == 1) {\r\n            let first = right[e].childNodes[o].firstChild, // i\r\n              last = right[e].childNodes[o].lastChild; // s\r\n            if (!first.value) {\r\n              first.parentElement.style.backgroundColor = \"red\";\r\n              first.onclick = () => {\r\n                first.parentElement.style.backgroundColor = \"initial\";\r\n              };\r\n              alert(\"Пустые поля недопустимы, заполните либо удалите пустые точки подвеса\");\r\n              return;\r\n            }\r\n            if (!last.value) {\r\n              last.parentElement.style.backgroundColor = \"red\";\r\n              last.onclick = () => {\r\n                last.parentElement.style.backgroundColor = \"initial\";\r\n              };\r\n              alert(\"Пустые поля недопустимы, заполните либо удалите пустые точки подвеса\");\r\n              return;\r\n            }\r\n            this.pointsData.rightSide[\"point\" + (e + 1)].stalls = first.value + \"/\" + last.value;\r\n          } else if (o == 2) {\r\n            if (!right[e].childNodes[o].firstChild.value) {\r\n              right[e].childNodes[o].firstChild.parentElement.style.backgroundColor = \"red\";\r\n              right[e].childNodes[o].firstChild.onclick = () => {\r\n                right[e].childNodes[o].firstChild.parentElement.style.backgroundColor = \"initial\";\r\n              }\r\n              alert(\"Пустые поля недопустимы, заполните либо удалите пустые точки подвеса\");\r\n              return;\r\n            }\r\n            this.pointsData.rightSide[\"point\" + (e + 1)].meters = right[e].childNodes[o].firstChild.value;\r\n          } else if (o == 3) {\r\n            this.pointsData.rightSide[\"point\" + (e + 1)].machine = right[e].childNodes[o].firstChild.value;\r\n          }\r\n        }\r\n      }\r\n      this.fillEditCardPointsDiv(this.pointsData);\r\n      this.backgroundPoints.style.display = \"none\";\r\n    } else {\r\n      this.backgroundPoints.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  addAct = () => {\r\n    let num = this.perfActs.childNodes.length + 1, // t\r\n      div = document.createElement(\"div\"), // o\r\n      sp = document.createElement(\"span\"), // i\r\n      inpt = document.createElement(\"input\"), // s\r\n      sp2 = document.createElement(\"span\"); // l\r\n\r\n    div.setAttribute(\"class\", \"act-line\");\r\n    sp.setAttribute(\"class\", \"perf-act\");\r\n    sp.setAttribute(\"id\", \"perf-act\" + t);\r\n    sp.textContent = num + \":\";\r\n    inpt.setAttribute(\"type\", \"text\");\r\n    inpt.setAttribute(\"class\", \"act-time\");\r\n    inpt.setAttribute(\"id\", \"act-time\" + num);\r\n    inpt.setAttribute(\"placeholder\", \"1ч 15мин\");\r\n    sp2.setAttribute(\"id\", \"del-act-btn\" + t);\r\n    sp2.setAttribute(\"class\", \"del-act-btn\");\r\n    sp2.textContent = \"X\";\r\n    sp2.onclick = () => {\r\n      sp2.parentElement.remove();\r\n    };\r\n    div.appendChild(sp);\r\n    div.appendChild(inpt);\r\n    div.appendChild(sp2);\r\n    this.perfActs.insertBefore(div, this.perfActs.childNodes[e]);\r\n  };\r\n\r\n  checkActs = () => {\r\n    let childLen = this.perfActs.childNodes.length, //e\r\n      children = this.perfActs.childNodes; //t\r\n    for (let i = 0; i < childLen; i++) { // n\r\n      if (!children[i].childNodes[1].value) {\r\n        children[i].childNodes[1].style.borderColor = \"red\"\r\n        children[i].childNodes[1].onclick = () => {\r\n          return children[i].childNodes[1].style.borderColor = \"initial\";\r\n        }\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  inputsValid = () => {\r\n    if (!this.perfName.value) {\r\n      this.perfName.style.borderColor = \"red\"\r\n      return false;\r\n    } else if (!this.perfType.value) {\r\n      this.perfType.style.borderColor = \"red\"\r\n      return false;\r\n    } else if (!this.checkActs()) {\r\n      this.perfActs.borderColor = \"red\";\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  save = async (perfId, action) => { // e , t\r\n    if (\"update\" === action || \"create\" === action) {\r\n      if (this.inputsValid()) {\r\n        let perfName = this.perfName.value, //o\r\n          perfType = this.perfType.value, // i\r\n          perfUrl = this.perfUrl.value, // s\r\n          acts = [], // l\r\n          perfNotes = this.perfNotes.value; // a\r\n\r\n\r\n        for (let e = 0; e < this.perfActs.childNodes.length; e++) {\r\n          if (this.perfActs.childNodes[e].childNodes[1].value.includes(\",\")) {\r\n            return this.perfActs.childNodes[e].childNodes[1].style.borderColor = \"red\";\r\n          }\r\n          acts.push(this.perfActs.childNodes[e].childNodes[1].value);\r\n        }\r\n        if (perfId && action === \"update\") {\r\n          // let query = `name=${perfName}&type=${perfType}&imgUrl=${perfUrl}&acts=${acts}&points=${JSON.stringify()}&notes=${perfNotes}&perfId=${perfId}&action=${action}`;\r\n          let data = {\r\n            name: perfName,\r\n            type: perfType,\r\n            imgUrl: perfUrl,\r\n            acts: acts,\r\n            points: this.pointsData,\r\n            notes: perfNotes,\r\n            perfId: perfId,\r\n            action: action\r\n          }\r\n\r\n          const resp = await request(\"/performances\", \"POST\", data);\r\n\r\n          if (resp.statusText == \"OK\") {\r\n            alert(\"Спектакль обновлен успешно\");\r\n            this.backgroundModal.style.display = \"none\";\r\n            window.location.reload();\r\n            return;\r\n          } else {\r\n            alert(\"Ошибка во время сохранения\");\r\n            return;\r\n          }\r\n\r\n        } else if (!perfId && action == \"create\") {\r\n          let data = {\r\n            name: perfName,\r\n            type: perfType,\r\n            imgUrl: perfUrl,\r\n            acts: acts,\r\n            points: this.pointsData,\r\n            notes: perfNotes,\r\n            perfId: perfId,\r\n            action: action\r\n          }\r\n\r\n          const resp = await request(\"/performances\", \"POST\", data);\r\n          if (resp.statusText == \"OK\") {\r\n            alert(\"Новый спектакль успешно добавлен\");\r\n            window.location.reload();\r\n          }\r\n          else {\r\n            alert(\"Ошибка во время создания\");\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    } else if (action === \"remove\") {\r\n      let dt = {\r\n        perfId: perfId,\r\n        action: action\r\n      }\r\n      let resp = await request(\"/performances\", \"POST\", dt);\r\n      if (resp.statusText == \"OK\") {\r\n        alert(\"Спектакль успешно удалён\");\r\n        window.location.reload();\r\n        return;\r\n      }\r\n      else {\r\n        alert(\"Ошибка удаления\");\r\n        return;\r\n      };\r\n    }\r\n  };\r\n\r\n  addPoint = point => {\r\n    // e - point\r\n    // t-tr, o-sp\r\n\r\n    const tr = document.createElement(\"tr\");\r\n    const sp = document.createElement(\"span\");\r\n\r\n    sp.textContent = \"/\";\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      let td = document.createElement(\"td\");\r\n\r\n      if (i == 1) {\r\n        for (let b = 0; b < 2; b++) {\r\n          let inpt = document.createElement(\"input\");\r\n          inpt.setAttribute(\"type\", \"number\");\r\n          inpt.setAttribute(\"class\", \"lines\");\r\n          if (b == 1) {\r\n            td.appendChild(sp);\r\n          }\r\n          td.appendChild(inpt);\r\n        }\r\n      }\r\n\r\n      else if (i == 2) {\r\n        let inpt = document.createElement(\"input\");\r\n        inpt.setAttribute(\"type\", \"number\");\r\n        inpt.setAttribute(\"class\", \"meters\");\r\n        td.appendChild(inpt);\r\n      } else if (i == 3) {\r\n        // e-inpt, t -sp\r\n        let inpt = document.createElement(\"input\");\r\n        let sp = document.createElement(\"span\");\r\n        sp.textContent = \"X\";\r\n        sp.setAttribute(\"class\", \"del-point-rope\");\r\n        sp.onclick = e => {\r\n          if (confirm(\"Удалить эту точку подвеса?\")) {\r\n            e.target.parentElement.parentElement.remove();\r\n            this.totalPointsNum--;\r\n            this.totalPointsSpan.textContent = this.totalPointsNum + \" шт.\";\r\n          }\r\n        }\r\n        inpt.setAttribute(\"type\", \"number\");\r\n        inpt.setAttribute(\"class\", \"machine\");\r\n        td.appendChild(inpt);\r\n        td.appendChild(sp);\r\n      }\r\n      tr.appendChild(td);\r\n    }\r\n    tr.setAttribute(\"class\", point + \"-point-rope\");\r\n    document.getElementById(point + \"-table\").appendChild(tr);\r\n    this.totalPointsNum++;\r\n    this.totalPointsSpan.textContent = this.totalPointsNum + \" шт.\";\r\n  };\r\n}\r\n","class Repertuar {\r\n\r\n\r\n  constructor() {\r\n    this.rollLine = document.getElementById(\"event-container\");\r\n    this.day = 1000 * 60 * 60 * 24;\r\n    this.dt = new Date(Date.now());\r\n\r\n    for(let i=0; i < 5; i++) {\r\n      this.todaySquare = document.getElementById(`${new Date(Date.now()).getMonth()}-${this.dt.getDate()}`);\r\n      if (!this.todaySquare) {\r\n        this.dt = new Date(this.dt.getTime() + this.day);\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n    this.target = this.todaySquare.offsetLeft - 200;\r\n\r\n    window.onload = () => {\r\n      this.startAnimatingScroll();\r\n    };\r\n  }\r\n\r\n  startAnimatingScroll() {\r\n    let speed = 10;\r\n    let d = 1;\r\n    let id = setInterval(() => {\r\n      if (this.rollLine.scrollLeft < this.target) {\r\n        d++;\r\n        this.rollLine.scrollLeft += 500 + (speed*d);\r\n      } else {\r\n        clearInterval(id);\r\n      }\r\n    }, 50);\r\n  }\r\n}\r\n","\r\nasync function request(url, method, data) {\r\n  const response = await fetch(url, {\r\n    method: method,\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body:  JSON.stringify(data) \r\n  });\r\n  return response;\r\n}"]}