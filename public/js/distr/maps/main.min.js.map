{"version":3,"sources":["main.js"],"names":["request","method","url","query","cb","xhttp","XMLHttpRequest","onreadystatechange","this","readyState","status","open","setRequestHeader","send","Auth","_this","authBt","document","getElementById","login","pass","onclick","value","alert","res","window","location","href","Authenticate","pass1","pass2","authenBt","style","borderColor","q","console","log","statusText","Performance","docBody","getElementsByTagName","backgroundImage","backgroundRepeat","pointsData","leftSide","rightSide","totalPointsNum","addPerfBtn","searchInpt","backgroundModal","closeAddPerf","savePerfBtn","perfName","perfType","perfUrl","perfActs","perfPoints","perfNotes","addActBtn","searchResults","closeCardPerf","backgroundCard","addPointsBtn","addRightPointBtn","addLeftPointBtn","backgroundPoints","closeEditPointsBtn","userPointsBack","closeUserPoints","cardPerfName","cardPerfImg","cardPerfType","cardPerfActs","cardPerfPoints","cardPerfNotes","totalPointsSpan","getActsEnding","actsNum","ending","showPerformanceCard","display","scrollTo","showUsualPointsTable","fillCardPerformanceActs","type","acts","textContent","length","clearDomElement","e","actLine","createElement","span1","span2","setAttribute","appendChild","fillCardPerformancePoints","points","childNodes","removeChild","totalPoints","countPointsNum","fillUserPointsTable","btn","userPerfCardBack","height","offsetHeight","i","fillPerformanceCard","performance","name","imgUrl","src","notes","innerHTML","admin","editBt","openEdit","rmBt","confirm","save","_id","parentElement","remove","elem","firstChild","fillSearchResults","results","srchResults","el","oninput","srchQuery","test","JSON","parse","responseText","perfs","sp","ip","rm","add","addAct","target","em","fillEditCardPointsDiv","fillPointsEditModal","nSp","openEditTable","isEmpty","obj","prop","hasOwnProperty","stringify","leftTable","rightTable","trLeft","trRight","td2","td3","td4","numTotal","key1","inpt1","brSp","inpt2","stalls","split","inptMeters","meters","inptMach","machine","delsp","key2","totalNum","leftUsrTable","rightUsrTable","saveEditingPoints","leftPoints","getElementsByClassName","rightPoints","b","line1","line2","lastChild","backgroundColor","addPoint","childNum","nextChildNum","spanAct","timeInpt","delBtn","insertBefore","checkActs","children","inputsValid","perfId","action","includes","push","reload","perfData","side","tr","brSpan","td","inpt","delSp","SkedApp","init","$","change"],"mappings":"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","file":"../main.min.js","sourcesContent":["function request(method, url, query, cb) {\n  const xhttp = new XMLHttpRequest();\n  xhttp.onreadystatechange = function() {\n    if (this.readyState == 4 && this.status == 200) {\n      cb(\"success\", this);\n    } else if (this.readyState == 4 && this.status == 500) {\n      cb(\"error\", this);\n    }\n  };\n  xhttp.open(method, url, true);\n\n  if(query !== false) {\n    xhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n    xhttp.send(query);\n  } else {\n    xhttp.send();\n  }\n}\nfunction Auth() {\n  const _this = this;\n  this.authBt = document.getElementById(\"auth-bt\");\n  this.login = document.getElementById(\"login\");\n  this.pass = document.getElementById(\"pass\");\n\n  this.authBt.onclick = function() {\n    let login = _this.login.value;\n    let pass = _this.pass.value;\n\n    if(!login || !pass) {\n      return alert(\"Отсутствует логин или пароль\");\n    }\n    request(\"POST\", \"/auth\", `login=${login}&pass=${pass}`, function(status, res) {\n      if(status == \"success\") {\n        alert(\"Авторизация успешна и будет действительна в течение 30 дней\");\n        return window.location.href = \"/\";\n      } else if(status == \"error\") {\n        alert(\"Ошибка авторизации, проверьте введённые Вами данные\");\n        return;\n      }\n    });\n  }\n}\nfunction Authenticate() {\n  const _this = this;\n\n  this.login = document.getElementById(\"login\");\n  this.pass1 = document.getElementById(\"pass1\");\n  this.pass2 = document.getElementById(\"pass2\");\n  this.authenBt = document.getElementById(\"authenticate-bt\");\n\n  this.login.onclick = function() {\n    _this.login.style.borderColor = \"initial\";\n  };\n  this.pass1.onclick = function() {\n    _this.pass1.style.borderColor = \"initial\";\n  };\n  this.pass2.onclick = function() {\n    _this.pass2.style.borderColor = \"initial\";\n  };\n  \n  this.authenBt.onclick = function() {\n    // check inputs \n    if(!_this.login.value) {\n      return _this.login.style.borderColor = \"red\";\n    } else if(!_this.pass1.value) {\n      return _this.pass1.style.borderColor = \"red\";\n    } else if(!_this.pass2.value) {\n      return _this.pass2.style.borderColor = \"red\";\n    }\n\n    let login = _this.login.value;\n    let pass1 = _this.pass1.value;\n    let pass2 = _this.pass2.value;\n    let q = `login=${login}&pass1=${pass1}&pass2=${pass2}`;\n\n    // check passes match\n    if(pass1 !== pass2) {\n      return alert(\"Введённые пароли не совпадают\");\n    }\n\n    request(\"POST\", \"/authenticate\", q, function(status, res) {\n      if(status == \"success\") {\n        alert(\"Аутентификация успешна, сейчас вы будете перенаправлены на страницу логина\");\n        return window.location.href = \"/auth\";\n      } else if(status == \"error\") {\n        console.log(res.statusText);\n        alert(\"Ошибка аутентификации, проверьте все поля\");\n        return;\n      }\n    });\n  };\n } \nfunction Performance() {\n  // change background body image on this page\n  const docBody = document.getElementsByTagName(\"body\");                                                     \n  docBody[0].style.backgroundImage = \"url('/static/imgs/backgr-bsh.jpg')\";\n  docBody[0].style.backgroundRepeat = \"no-repeat\";\n\n  const _this = this;\n\n  this.pointsData = {\n    leftSide: {},\n    rightSide: {}\n  };\n  // \n  this.totalPointsNum = 0;\n  this.addPerfBtn = document.getElementById(\"add-performance-btn\");\n\n  this.searchInpt = document.getElementById(\"search-perfs\");\n  this.backgroundModal = document.getElementById(\"background-modal\");\n  this.closeAddPerf = document.getElementById(\"close-adding-perf\");\n  this.savePerfBtn = document.getElementById(\"save-perf-btn\");\n  this.perfName = document.getElementById(\"perf-name\");\n  this.perfType = document.getElementById(\"perf-type\");\n  this.perfUrl = document.getElementById(\"perf-pic-url\");\n  this.perfActs = document.getElementById(\"perf-acts\");\n  this.perfPoints = document.getElementById(\"perf-points\");\n  this.perfNotes = document.getElementById(\"perf-notes\");\n  this.addActBtn = document.getElementById(\"add-act\");\n  this.searchResults = document.getElementById(\"search-results\");\n  this.closeCardPerf = document.getElementById(\"close-card-perf\");\n  this.backgroundCard = document.getElementById(\"card-back\");\n  this.addPointsBtn = document.getElementById(\"add-points\");\n  this.addRightPointBtn = document.getElementById(\"add-right-pt-btn\");\n  this.addLeftPointBtn = document.getElementById(\"add-left-pt-btn\");\n  this.backgroundPoints = document.getElementById(\"points-back\");\n  this.closeEditPointsBtn = document.getElementById(\"close-points-perf\");\n  this.userPointsBack = document.getElementById(\"user-points-back\");\n  this.closeUserPoints = document.getElementById(\"close-user-points\");\n\n  this.cardPerfName = document.getElementById(\"card-perf-name\");\n  this.cardPerfImg = document.getElementById(\"card-perf-img\");\n  this.cardPerfType = document.getElementById(\"card-perf-type\");\n  this.cardPerfActs = document.getElementById(\"card-perf-acts\");\n  this.cardPerfPoints = document.getElementById(\"card-perf-points\");\n  this.cardPerfNotes = document.getElementById(\"card-perf-notes\");\n  \n  this.totalPointsSpan = document.getElementById(\"total-points-num\");\n\n  this.getActsEnding = function(actsNum) {\n    let ending;\n    if(actsNum == 1) {\n      ending = actsNum + \" акт\";\n    } else if(actsNum > 1 && actsNum < 5 ) {\n      ending = actsNum + \" акта\";\n    } else {\n      ending = actsNum + \"актов\";\n    }\n    return ending;\n  };\n\n  this.showPerformanceCard = function() {\n    // show usual performance card and scroll top\n    _this.backgroundCard.style.display = \"block\";\n    window.scrollTo(0, 0);\n  };\n\n  this.showUsualPointsTable = function() {\n    // show usual performance table and scroll top\n    _this.userPointsBack.style.display = \"block\";\n    window.scrollTo(0, 0);\n  };\n\n  this.fillCardPerformanceActs = function(type, acts) {\n    const cardPerfType = _this.cardPerfType;\n    const cardPerfActs = _this.cardPerfActs;\n\n    // fill usual performance card with acts\n    if(type === \"ballet\") {\n      cardPerfType.textContent = `Балет, ${_this.getActsEnding(acts.length)}`;\n    } \n    else if(type === \"opera\") {\n      cardPerfType.textContent = `Опера, ${_this.getActsEnding(acts.length)}`;\n    }\n\n    // clear act's element before filling it\n    _this.clearDomElement(cardPerfActs);\n\n    // create and fill element for each act\n    for(let e=0; e<acts.length; e++) {\n      let actLine = document.createElement(\"div\");\n      let span1 = document.createElement(\"span\");\n      let span2 = document.createElement(\"span\");\n\n      actLine.setAttribute(\"class\", \"act-line\");\n      span1.textContent = `${e+1} Акт:`;\n      span2.textContent = `${acts[e]}`;\n\n      actLine.appendChild(span1);\n      actLine.appendChild(span2);\n      cardPerfActs.appendChild(actLine);\n    }\n  };\n\n  this.fillCardPerformancePoints = function(points) {\n    const cardPerfPoints = _this.cardPerfPoints;\n    \n    // if there is no points \n    if(!points) {\n      // show that points is absent\n      if(cardPerfPoints.childNodes.length == 3) {\n        // clear old elements before filling\n        cardPerfPoints.removeChild(cardPerfPoints.childNodes[1]);\n        cardPerfPoints.removeChild(cardPerfPoints.childNodes[1]);\n        // add 'absent' message \n        const i = document.createElement(\"i\");\n        i.textContent = \"– Отсутствуют\";\n        cardPerfPoints.appendChild(i);\n      }\n    }\n    else {\n      // if there IS points\n      if(cardPerfPoints.childNodes.length == 2) {\n        // clear user card points div before filling\n        cardPerfPoints.removeChild(cardPerfPoints.childNodes[1]);\n      } else if(cardPerfPoints.childNodes.length == 3) {\n        // clear old elements before filling\n        cardPerfPoints.removeChild(cardPerfPoints.childNodes[1]);\n        cardPerfPoints.removeChild(cardPerfPoints.childNodes[1]);\n      }\n\n      // fill performance card with number of points total\n      const totalPoints = document.createElement(\"p\");\n      totalPoints.setAttribute(\"class\", \"total-points-usr\");\n      totalPoints.textContent = `Всего: ${_this.countPointsNum(points)} шт.`;\n      cardPerfPoints.appendChild(totalPoints);\n    \n      // fill usual table itself with points\n      _this.fillUserPointsTable(points);\n\n      // add show usual points button\n      const btn = document.createElement(\"button\");\n      btn.setAttribute(\"class\", \"showPoints-btn\");\n      btn.textContent = \"Просмотр\";\n      btn.onclick = function() {\n        let userPointsBack = _this.userPointsBack;\n        let userPerfCardBack = _this.backgroundCard;\n\n        // set point table's background height as much as performance card background\n        userPointsBack.style.height = userPerfCardBack.offsetHeight + \"px\";\n\n        // show usual table on click\n        _this.showUsualPointsTable();\n      };\n      // append above button to usual card if it is absent\n      cardPerfPoints.appendChild(btn);\n    }\n  };\n \n  this.fillPerformanceCard = function(performance) {\n    // filling usual performance card\n    const cardPerfName = _this.cardPerfName;\n    const cardPerfImg = _this.cardPerfImg;\n    const cardPerfNotes = _this.cardPerfNotes;\n  \n    // fill permormance name\n    cardPerfName.textContent = performance.name;\n\n    // show performance img if exists\n    if(performance.imgUrl) {\n      cardPerfImg.src = \"/static/imgs/performance-imgs/\"+performance.imgUrl;\n      cardPerfImg.style.display = \"block\";\n    } else {\n      cardPerfImg.src = \"\";\n      cardPerfImg.style.display = \"none\";\n    }\n    \n    // fill performance acts\n    _this.fillCardPerformanceActs(performance.type, performance.acts);\n    \n    // fill performance card itself with existing points\n    _this.fillCardPerformancePoints(performance.points);\n   \n    // fill notes\n    if(performance.notes != \"\") {\n      cardPerfNotes.innerHTML = performance.notes;\n    } else {\n      cardPerfNotes.textContent = \"– Отсутствуют\"; \n    }\n\n    // if user is admin, add editing buttons\n    if(admin === \"true\") {\n      // add edit performance button\n      let editBt = document.createElement(\"button\");\n      editBt.setAttribute(\"class\", \"edit-btn\");\n      editBt.textContent = \"Редактировать\";\n      editBt.onclick = function() {\n        _this.openEdit(performance);\n      };\n      // add remove performance button\n      let rmBt = document.createElement(\"button\");\n      rmBt.setAttribute(\"class\", \"rm-perf-btn\");\n      rmBt.textContent = \"Удалить\";\n      rmBt.onclick = function() {\n        if(confirm(`Вы действительно хотите удалить спектакль \"${performance.name}\" из базы?`)) {\n          _this.save(performance._id, \"remove\");\n        }\n      };\n\n      // add edit and remove buttons if no ones\n      const cardElemCount = cardPerfName.parentElement.childNodes.length;\n      if(cardElemCount == 5) {\n        cardPerfName.parentElement.appendChild(editBt);\n        cardPerfName.parentElement.appendChild(rmBt);\n      } \n      else {\n        // if there is ones, replace them with new ones\n        cardPerfName.parentElement.childNodes[5].remove();\n        cardPerfName.parentElement.childNodes[5].remove();\n        cardPerfName.parentElement.appendChild(editBt);\n        cardPerfName.parentElement.appendChild(rmBt);\n      }\n    }\n    // update function of save performance button of usual card\n    _this.savePerfBtn.onclick = function() {\n      _this.save(performance._id, \"update\");\n    };\n  };\n\n  this.clearDomElement = function(elem) {\n    // safe and fast way to clear dom element\n    while (elem.firstChild) {\n      elem.removeChild(elem.firstChild);\n    }\n  };\n\n  // filling search results div with found performanes\n  this.fillSearchResults = function(results) {\n\n    const srchResults = _this.searchResults;\n\n    // if nothing found\n    if(results.length == 0) {\n      const el = document.createElement(\"div\");\n      el.setAttribute(\"class\", \"perf-name-found nothing-found\");\n      el.textContent = \"Ничего не найдено\";\n      srchResults.appendChild(el);\n    } \n    else {\n      // fill search div with elements with performance's names\n      for(let i=0; i<results.length; i++) {\n        let el = document.createElement(\"div\");\n        el.setAttribute(\"class\", \"perf-name-found\");\n        el.textContent = results[i].name;\n\n        // on click -> fill and show perfrormance card modal\n        el.onclick = function() {\n          _this.fillPerformanceCard(results[i]);\n          _this.showPerformanceCard();\n        };\n        srchResults.appendChild(el);\n      }\n    }\n  };\n\n  this.searchInpt.oninput = function() {\n    // clear search results div \n    _this.clearDomElement(_this.searchResults);\n\n    const srchQuery = _this.searchInpt.value;\n    const rgx = /^\\s*$/;\n\n    // regex test if query does not start with empty value\n    if(!rgx.test(srchQuery)) {\n      const queryStr = `query=${srchQuery}`;\n\n      // send the above query to the server\n      request(\"POST\", \"/perf-search\", queryStr, function(status, res) {\n        if(status === \"success\") {\n          const results = JSON.parse(res.responseText).perfs;\n\n          // fill search div with results found \n          _this.fillSearchResults(results);\n        }\n        else if(status == \"err\") {\n          return;\n        }\n      });\n    }\n  };\n\n  this.openEdit = function(performance) {\n    _this.pointsData = performance.points;\n    \n    _this.backgroundCard.style.display = \"none\";\n    _this.backgroundModal.style.display = \"block\";\n\n    this.perfName.value = performance.name;\n    this.perfType.value = performance.type;\n    this.perfUrl.value = performance.imgUrl;\n    \n    // fill editing window with acts\n   \n    if(performance.acts.length > 0) {\n      this.perfActs.innerHTML = \"\";\n\n      let actLine, sp, ip, rm, add;\n      for(let i=0; i<performance.acts.length; i++) {\n        actLine = document.createElement(\"actLine\");\n        actLine.setAttribute(\"class\", \"act-line\");\n\n        sp = document.createElement(\"span\");\n        sp.setAttribute(\"class\", \"perf-act\");\n        sp.textContent = (i+1)+\":\";\n        actLine.appendChild(sp);\n        ip = document.createElement(\"input\");\n        ip.setAttribute(\"class\", \"act-time\");\n        ip.setAttribute(\"type\", \"text\");\n        ip.setAttribute(\"placeholder\", \"1ч 15мин\");\n        ip.value = performance.acts[i];\n        actLine.appendChild(ip);\n        if(i==0) {\n          add = document.createElement(\"button\");\n          add.setAttribute(\"class\", \"add-mini-btn\");\n          add.textContent = \"+\";\n          add.onclick = function() {\n            _this.addAct();\n          };\n          actLine.appendChild(add);\n        } else {\n          rm = document.createElement(\"span\");\n          rm.setAttribute(\"class\", \"del-act-btn\");\n          rm.textContent = \"X\";\n          rm.onclick = function(e) {\n            e.target.parentElement.remove();\n          };\n          actLine.appendChild(rm);\n        }\n        em = document.createElement(\"button\");\n        sp.setAttribute(\"class\", \"perf-act\");\n        this.perfActs.appendChild(actLine);\n      }\n      \n    }\n    _this.fillEditCardPointsDiv(performance.points);\n    _this.fillPointsEditModal(performance.points);\n    this.perfNotes.value = performance.notes;\n\n    // change text of save button\n    this.savePerfBtn.textContent = \"Сохранить изменения\";\n    this.savePerfBtn.onclick = function() {\n      _this.save(performance._id, \"update\");\n    };\n  };\n\n  this.fillEditCardPointsDiv = function(points) {\n    // fill editing table with points\n    if(points) {\n      // fill preview modal\n      _this.perfPoints.childNodes[0].remove();\n      _this.perfPoints.childNodes[0].remove();\n      let nSp = document.createElement(\"span\");\n      nSp.setAttribute(\"class\", \"points-number\");\n      nSp.textContent = _this.countPointsNum(points) + \" шт.\";\n      let openEditTable = document.createElement(\"span\");\n      openEditTable.setAttribute(\"class\", \"showPoints-btn\");\n      openEditTable.textContent = \"Редактор\";\n      openEditTable.onclick = function() {\n        _this.fillPointsEditModal(points);\n        // set edit points' background height as much as edit card background\n        _this.backgroundPoints.style.height = _this.backgroundModal.offsetHeight + \"px\";\n        _this.backgroundPoints.style.display = \"block\";\n        window.scrollTo(0, 0);\n      }\n      _this.perfPoints.appendChild(nSp);\n      _this.perfPoints.appendChild(openEditTable);\n    } \n  };\n\n  this.isEmpty = function(obj) {\n    for(var prop in obj) {\n      if(obj.hasOwnProperty(prop)) {\n        return false;\n      }\n    }\n    return JSON.stringify(obj) === JSON.stringify({});\n  };\n\n  this.fillPointsEditModal = function(points) {\n    if(!points) {\n      points = {};\n    }\n\n    let leftTable = document.getElementById(\"left-table\");\n    let rightTable = document.getElementById(\"right-table\");\n    \n    // clear before filling\n    while(leftTable.childNodes.length != 1) {\n      leftTable.childNodes[leftTable.childNodes.length-1].remove();\n    }\n    while(rightTable.childNodes.length != 1) {\n      rightTable.childNodes[rightTable.childNodes.length-1].remove();\n    }\n\n    _this.totalPointsNum = _this.countPointsNum(points);\n\n    let numTotal = document.getElementById(\"total-points-num\");\n    numTotal.textContent = _this.countPointsNum(points) + \" шт.\";\n\n    let trLeft, trRight, td2, td3, td4;\n    for(key1 in points.leftSide) {\n      if(_this.isEmpty(points.leftSide[key1])) {\n        continue;\n      }\n\n      trLeft = document.createElement(\"tr\");\n      trLeft.setAttribute(\"class\", \"left-point-rope\");\n      trLeft.appendChild(document.createElement(\"td\"));\n\n      td2 = document.createElement(\"td\");\n      td3 = document.createElement(\"td\");\n      td4 = document.createElement(\"td\");\n\n      // fill them with inputs\n      let inpt1, brSp, inpt2;\n      inpt1 = document.createElement(\"input\");\n      inpt1.setAttribute(\"type\", \"number\");\n      inpt1.setAttribute(\"class\", \"lines\");\n      inpt1.value = points.leftSide[key1].stalls.split('/')[0];\n      brSp = document.createElement(\"span\");\n      brSp.textContent = \"/\";\n      inpt2 = document.createElement(\"input\");\n      inpt2.setAttribute(\"type\", \"number\");\n      inpt2.setAttribute(\"class\", \"lines\");\n      inpt2.value = points.leftSide[key1].stalls.split('/')[1];\n      td2.appendChild(inpt1);\n      td2.appendChild(brSp);\n      td2.appendChild(inpt2);\n\n      let inptMeters = document.createElement(\"input\");\n      inptMeters.setAttribute(\"type\", \"number\");\n      inptMeters.setAttribute(\"class\", \"meters\");\n      inptMeters.value = points.leftSide[key1].meters;\n      td3.appendChild(inptMeters);\n\n      let inptMach = document.createElement(\"input\");\n      inptMach.setAttribute(\"type\", \"number\");\n      inptMach.setAttribute(\"class\", \"machine\");\n      inptMach.value = points.leftSide[key1].machine;\n      td4.appendChild(inptMach);\n      let delsp = document.createElement(\"span\");\n      delsp.setAttribute(\"class\", \"del-point-rope\");\n      delsp.textContent = \"X\";\n      delsp.onclick = function(e) {\n        if(confirm(\"Удалить эту точку подвеса?\")) {\n          e.target.parentElement.parentElement.remove();\n          _this.totalPointsNum--;\n          _this.totalPointsSpan.textContent = _this.totalPointsNum +\" шт.\";\n        }\n      };\n      td4.appendChild(delsp);\n\n      trLeft.appendChild(td2);\n      trLeft.appendChild(td3);\n      trLeft.appendChild(td4);\n      leftTable.appendChild(trLeft);\n    }\n\n    for(key2 in points.rightSide) { \n      if(_this.isEmpty(points.rightSide[key2])) {\n        continue;\n      }\n      trRight = document.createElement(\"tr\");\n      trRight.setAttribute(\"class\", \"right-point-rope\");\n      trRight.appendChild(document.createElement(\"td\"));\n      td2 = document.createElement(\"td\");\n      td3 = document.createElement(\"td\");\n      td4 = document.createElement(\"td\");\n\n      // fill them with inputs\n      let inpt1, brSp, inpt2;\n      inpt1 = document.createElement(\"input\");\n      inpt1.setAttribute(\"type\", \"number\");\n      inpt1.setAttribute(\"class\", \"lines\");\n      inpt1.value = points.rightSide[key2].stalls.split('/')[0];\n      brSp = document.createElement(\"span\");\n      brSp.textContent = \"/\";\n      inpt2 = document.createElement(\"input\");\n      inpt2.setAttribute(\"type\", \"number\");\n      inpt2.setAttribute(\"class\", \"lines\");\n      inpt2.value = points.rightSide[key2].stalls.split('/')[1];\n      td2.appendChild(inpt1);\n      td2.appendChild(brSp);\n      td2.appendChild(inpt2);\n\n      let inptMeters = document.createElement(\"input\");\n      inptMeters.setAttribute(\"type\", \"number\");\n      inptMeters.setAttribute(\"class\", \"meters\");\n      inptMeters.value = points.rightSide[key2].meters;\n      td3.appendChild(inptMeters);\n\n      let inptMach = document.createElement(\"input\");\n      inptMach.setAttribute(\"type\", \"number\");\n      inptMach.setAttribute(\"class\", \"machine\");\n      inptMach.value = points.rightSide[key2].machine;\n      td4.appendChild(inptMach);\n      let delsp = document.createElement(\"span\");\n      delsp.setAttribute(\"class\", \"del-point-rope\");\n      delsp.textContent = \"X\";\n      delsp.onclick = function(e) {\n        if(confirm(\"Удалить эту точку подвеса?\")) {\n          e.target.parentElement.parentElement.remove();\n          _this.totalPointsNum--;\n          _this.totalPointsSpan.textContent = _this.totalPointsNum +\" шт.\";\n        }\n      };\n      td4.appendChild(delsp);\n      trRight.appendChild(td2);\n      trRight.appendChild(td3);\n      trRight.appendChild(td4);\n      rightTable.appendChild(trRight);\n    }\n  };\n\n  this.countPointsNum = function(points) {\n    let totalNum = 0; \n    if(!points) {\n      return 0;\n    }\n    for(key1 in points.leftSide) {\n      if(!_this.isEmpty(points.leftSide[key1])) {\n        totalNum++;\n      }\n    }\n    for(key1 in points.rightSide) {\n      if(!_this.isEmpty(points.rightSide[key1])) {\n        totalNum++;\n      }\n    }\n    return totalNum;\n  };\n\n  this.closeUserPoints.onclick = function() {\n    // close user table points\n    _this.userPointsBack.style.display = \"none\";\n };\n\n  this.fillUserPointsTable = function(points) {\n    let leftUsrTable = document.getElementById(\"left-usr-table\");\n    let rightUsrTable = document.getElementById(\"right-usr-table\");\n    \n    // clear before filling\n    while(leftUsrTable.childNodes[1]) {\n      leftUsrTable.childNodes[1].remove();\n    }\n    while(rightUsrTable.childNodes[1]) {\n      rightUsrTable.childNodes[1].remove();\n    }\n\n    let numTotal = document.getElementById(\"total-user-points\");\n    numTotal.textContent = _this.countPointsNum(points) + \" шт.\";\n\n    let trLeft, trRight, td2, td3, td4;\n    for(key1 in points.leftSide) {\n      trLeft = document.createElement(\"tr\");\n      trLeft.appendChild(document.createElement(\"td\"));\n\n      td2 = document.createElement(\"td\");\n      td3 = document.createElement(\"td\");\n      td4 = document.createElement(\"td\");\n\n      td2.textContent = points.leftSide[key1].stalls; \n      trLeft.appendChild(td2);\n      td3.textContent = points.leftSide[key1].meters;\n      trLeft.appendChild(td3);\n      td4.textContent = points.leftSide[key1].machine;\n      trLeft.appendChild(td4);\n      leftUsrTable.appendChild(trLeft);\n    }\n\n    for(key2 in points.rightSide) { \n      trRight = document.createElement(\"tr\");\n      trRight.appendChild(document.createElement(\"td\"));\n      td2 = document.createElement(\"td\");\n      td3 = document.createElement(\"td\");\n      td4 = document.createElement(\"td\");\n      \n      td2.textContent = points.rightSide[key2].stalls;\n      trRight.appendChild(td2);\n      td3.textContent = points.rightSide[key2].meters;\n      trRight.appendChild(td3);\n      td4.textContent = points.rightSide[key2].machine;\n      trRight.appendChild(td4);\n      rightUsrTable.appendChild(trRight);\n    }\n  };\n\n  this.saveEditingPoints = function() {\n    // save points\n    let leftPoints = document.getElementsByClassName(\"left-point-rope\");\n    let rightPoints = document.getElementsByClassName(\"right-point-rope\");\n  \n    // clear points data before filling it\n    _this.pointsData = {\n      leftSide: {},\n      rightSide: {}\n    };\n\n    if(leftPoints.length == 0 && rightPoints.length == 0) {\n      _this.backgroundPoints.style.display = \"none\";\n      return;\n    }\n\n    for(let i=0; i<leftPoints.length; i++) {\n      _this.pointsData.leftSide[\"point\"+(i+1)] = {};\n      for(let b=1; b<leftPoints[i].childNodes.length; b++) {\n        if(b==1) {\n          let line1 = leftPoints[i].childNodes[b].firstChild;\n          let line2 = leftPoints[i].childNodes[b].lastChild;\n          // check if empty\n          if(!line1.value) {\n            line1.parentElement.style.backgroundColor = \"red\";\n            line1.onclick = function() {\n              line1.parentElement.style.backgroundColor = \"initial\";\n            };\n            alert(\"Пустые поля недопустимы, заполните либо удалите пустые точки подвеса\");\n            return;\n          } else if(!line2.value) {\n            line2.parentElement.style.backgroundColor = \"red\";\n            line2.onclick = function() {\n              line2.parentElement.style.backgroundColor = \"initial\";\n            };\n            alert(\"Пустые поля недопустимы, заполните либо удалите пустые точки подвеса\");\n            return;\n          }\n          _this.pointsData.leftSide[\"point\"+(i+1)].stalls = line1.value+\"/\"+line2.value;\n        } else if (b==2) {\n          // check if empty\n          if(!leftPoints[i].childNodes[b].firstChild.value) {\n            leftPoints[i].childNodes[b].firstChild.parentElement.style.backgroundColor = \"red\";\n            leftPoints[i].childNodes[b].firstChild.onclick = function() {\n              leftPoints[i].childNodes[b].firstChild.parentElement.style.backgroundColor = \"initial\";\n            }\n            alert(\"Пустые поля недопустимы, заполните либо удалите пустые точки подвеса\");\n            return;\n          }\n          _this.pointsData.leftSide[\"point\"+(i+1)].meters = leftPoints[i].childNodes[b].firstChild.value;\n        } else if (b==3) {\n          _this.pointsData.leftSide[\"point\"+(i+1)].machine = leftPoints[i].childNodes[b].firstChild.value;\n        }\n      }\n    }\n    for(let i=0; i<rightPoints.length; i++) {\n      _this.pointsData.rightSide[\"point\"+(i+1)] = {};\n      for(let b=1; b<rightPoints[i].childNodes.length; b++) {\n        if(b==1) {\n          let line1 = rightPoints[i].childNodes[b].firstChild;\n          let line2 = rightPoints[i].childNodes[b].lastChild;\n\n          // check if empty\n          if(!line1.value) {\n            line1.parentElement.style.backgroundColor = \"red\";\n            line1.onclick = function() {\n              line1.parentElement.style.backgroundColor = \"initial\";\n            };\n            alert(\"Пустые поля недопустимы, заполните либо удалите пустые точки подвеса\");\n            return;\n          } else if(!line2.value) {\n            line2.parentElement.style.backgroundColor = \"red\";\n            line2.onclick = function() {\n              line2.parentElement.style.backgroundColor = \"initial\";\n            };\n            alert(\"Пустые поля недопустимы, заполните либо удалите пустые точки подвеса\");\n            return;\n          }\n\n          _this.pointsData.rightSide[\"point\"+(i+1)].stalls = line1.value+\"/\"+line2.value;\n        } else if (b==2) {\n           // check if empty\n          if(!rightPoints[i].childNodes[b].firstChild.value) {\n            rightPoints[i].childNodes[b].firstChild.parentElement.style.backgroundColor = \"red\";\n            rightPoints[i].childNodes[b].firstChild.onclick = function() {\n              rightPoints[i].childNodes[b].firstChild.parentElement.style.backgroundColor = \"initial\";\n            }\n            alert(\"Пустые поля недопустимы, заполните либо удалите пустые точки подвеса\");\n            return;\n          }\n          _this.pointsData.rightSide[\"point\"+(i+1)].meters = rightPoints[i].childNodes[b].firstChild.value;\n        } else if (b==3) {\n          _this.pointsData.rightSide[\"point\"+(i+1)].machine = rightPoints[i].childNodes[b].firstChild.value;\n        }\n      }\n    }\n\n    // fill editing card points div\n    _this.fillEditCardPointsDiv(_this.pointsData);\n    _this.backgroundPoints.style.display = \"none\";\n  };\n\n  this.closeEditPointsBtn.onclick = function() {\n    _this.saveEditingPoints();\n  };\n\n  this.addPointsBtn.onclick = function() {\n    _this.backgroundPoints.style.display = \"block\";\n    window.scrollTo(0, 0);\n  };\n\n  this.closeCardPerf.onclick = function() {\n    _this.savePerfBtn.onclick = function() {\n      _this.save(false, \"create\");\n    };\n\n    _this.backgroundCard.style.display = \"none\";\n  };\n\n  if(admin === \"true\") {\n    this.addPerfBtn.onclick = function() {\n      _this.backgroundModal.style.display = \"block\";\n    };\n  }\n\n  this.closeAddPerf.onclick = function() {\n    _this.backgroundModal.style.display = \"none\";\n  };\n\n  this.savePerfBtn.onclick = function() {\n    _this.save(false, \"create\");\n  };\n\n  this.perfName.onclick = function() {\n    _this.perfName.style.borderColor = \"initial\";\n  };\n\n  this.perfType.onclick = function() {\n    _this.perfType.style.borderColor = \"initial\";\n  }\n\n  this.addActBtn.onclick = function() {\n    _this.addAct();\n  };\n\n  this.addRightPointBtn.onclick = function() {\n    _this.addPoint(\"right\");\n  }\n\n  this.addLeftPointBtn.onclick = function() {\n    _this.addPoint(\"left\");\n  }\n\n  this.addAct = function() {\n    // num of childnodes without button\n    let childNum = _this.perfActs.childNodes.length;\n    let nextChildNum = childNum+1;\n   \n    // create elements\n    let actLine = document.createElement(\"div\");\n    let spanAct = document.createElement(\"span\");\n    let timeInpt = document.createElement(\"input\");\n    let delBtn = document.createElement(\"span\");\n\n    \n    // set attributes on them\n    actLine.setAttribute(\"class\", \"act-line\")\n    spanAct.setAttribute(\"class\", \"perf-act\");\n    spanAct.setAttribute(\"id\", \"perf-act\"+nextChildNum);\n    spanAct.textContent = nextChildNum +\":\";\n    timeInpt.setAttribute(\"type\", \"text\");\n    timeInpt.setAttribute(\"class\", \"act-time\");\n    timeInpt.setAttribute(\"id\", \"act-time\"+nextChildNum);\n    timeInpt.setAttribute(\"placeholder\", \"1ч 15мин\");\n    delBtn.setAttribute(\"id\", \"del-act-btn\"+nextChildNum);\n    delBtn.setAttribute(\"class\", \"del-act-btn\");\n    delBtn.textContent = \"X\";\n    delBtn.onclick = function() {\n      delBtn.parentElement.remove();\n    };\n\n    // add\n    actLine.appendChild(spanAct);\n    actLine.appendChild(timeInpt);\n    actLine.appendChild(delBtn);\n    _this.perfActs.insertBefore(actLine, _this.perfActs.childNodes[childNum]);\n  };\n\n  this.checkActs = function() {\n    // num of childnodes\n    let childNum = _this.perfActs.childNodes.length;\n    let children = _this.perfActs.childNodes;\n    for(let i=0; i<childNum; i++) {\n      \n      // check if act time exists for all children\n      if(!children[i].childNodes[1].value) {\n        children[i].childNodes[1].style.borderColor = \"red\";\n        children[i].childNodes[1].onclick = function() {return children[i].childNodes[1].style.borderColor = \"initial\";};\n        return false;\n        break;\n      }\n    }\n    return true;\n  };\n\n  this.inputsValid = function() {\n    // check all inputs\n    if(!_this.perfName.value) {\n      _this.perfName.style.borderColor = \"red\";\n      return false;\n    } \n    else if (!_this.perfType.value) {\n      _this.perfType.style.borderColor = \"red\";\n      return false;\n    } \n    else if(!_this.checkActs()) {\n      _this.perfActs.borderColor = \"red\";\n      return false;\n    } \n    return true;\n  };\n\n  this.save = function(perfId, action) {\n    if(action === \"update\" || action === \"create\") {\n      // check for empty inputs\n      if(_this.inputsValid()) {\n        let name = _this.perfName.value;\n        let type = _this.perfType.value;\n        let imgUrl = _this.perfUrl.value;\n        let perfActs = [];\n        let perfNotes = _this.perfNotes.value;\n        \n        // check if acts do not include commas\n        for(let i=0; i<_this.perfActs.childNodes.length; i++) {\n          if(_this.perfActs.childNodes[i].childNodes[1].value.includes(\",\")) {\n            _this.perfActs.childNodes[i].childNodes[1].style.borderColor = \"red\";\n            return;\n          }\n          // add act to perfActs to save if validation passed\n          perfActs.push(_this.perfActs.childNodes[i].childNodes[1].value);\n        }\n  \n        if(perfId && action === \"update\") {\n          let perfData = `name=${name}&type=${type}&imgUrl=${imgUrl}&acts=${perfActs}&points=${JSON.stringify(_this.pointsData)}&notes=${perfNotes}&perfId=${perfId}&action=${action}`;\n  \n          // send data to Server\n          request(\"post\", \"/performances\", perfData, function(status, res) {\n            if(status == \"success\") {\n              alert(\"Спектакль обновлен успешно\");\n              _this.backgroundModal.style.display = \"none\";\n              window.location.reload();\n            }\n            else if(status == \"err\") {\n              return;\n            }\n          });\n        } else if(!perfId && action== \"create\") { \n          let perfData = `name=${name}&type=${type}&imgUrl=${imgUrl}&acts=${perfActs}&points=${JSON.stringify(_this.pointsData)}&notes=${perfNotes}&action=${action}`;\n          // send data to Server\n          request(\"post\", \"/performances\", perfData, function(status, res) {\n            if(status == \"success\") {\n              alert(\"Новый спектакль успешно добавлен\");\n              _this.backgroundModal.style.display = \"none\";\n              window.location.reload();\n            }\n            else if(status == \"err\") {\n              return;\n            }\n          });\n        }\n      }\n    } \n    else if(action === \"remove\") {\n      perfData = `perfId=${perfId}&action=${action}`;\n      // send data to Server\n      request(\"post\", \"/performances\", perfData, function(status, res) {\n        if(status == \"success\") {\n          alert(\"Спектакль успешно удалён\");\n          _this.backgroundModal.style.display = \"none\";\n          window.location.reload();\n        }\n        else if(status == \"err\") {\n          return;\n        }\n      });\n    }\n  };\n\n  this.addPoint = function(side) {\n    let tr = document.createElement(\"tr\");\n    let brSpan = document.createElement(\"span\");\n    brSpan.textContent = \"/\";\n\n    for(let i=0; i<4; i++) {\n      let td = document.createElement(\"td\");\n      if(i == 1) {\n        for(let b=0; b<2; b++) {\n          let inpt = document.createElement(\"input\");\n          inpt.setAttribute(\"type\", \"number\");\n          inpt.setAttribute(\"class\", \"lines\");\n          (b == 1 ? td.appendChild(brSpan):null);\n          td.appendChild(inpt);\n        }\n      } else if(i == 2) {\n        let inpt = document.createElement(\"input\");\n        inpt.setAttribute(\"type\", \"number\");\n        inpt.setAttribute(\"class\", \"meters\");\n        td.appendChild(inpt);\n      } else if(i == 3) {\n        let inpt = document.createElement(\"input\");\n        let delSp = document.createElement(\"span\");\n        delSp.textContent = \"X\";\n        delSp.setAttribute(\"class\", \"del-point-rope\");\n        delSp.onclick = function(e) {\n          if(confirm(\"Удалить эту точку подвеса?\")) {\n            e.target.parentElement.parentElement.remove();\n            _this.totalPointsNum--;\n            _this.totalPointsSpan.textContent = _this.totalPointsNum +\" шт.\";\n          }\n        };\n        inpt.setAttribute(\"type\", \"number\");\n        inpt.setAttribute(\"class\", \"machine\");\n        td.appendChild(inpt);\n        td.appendChild(delSp);\n      }\n      tr.appendChild(td);\n    }\n    // add\n    tr.setAttribute(\"class\", side+\"-point-rope\");\n    document.getElementById(side+\"-table\").appendChild(tr);\n\n    // increment total points\n    _this.totalPointsNum++;\n    _this.totalPointsSpan.textContent = _this.totalPointsNum + \" шт.\";\n  }; \n}\nfunction SkedApp() {\n  this.init = function() {\n    // add evt listeners on all elements\n    $(\".shift-choose\").change(function(e) {\n      console.log(e);\n    });\n  };\n};"]}